# Generated by Django 4.1 on 2023-11-22 01:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('clients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Preco Total')),
                ('status', models.CharField(blank=True, choices=[('Em andamento', 'Em andamento'), ('Finalizado', 'Finalizado'), ('Cancelado', 'Cancelado')], default='Em andamento', max_length=20, null=True, verbose_name='Status')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='Quantidade')),
                ('unitary_price', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Preco unitario')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'verbose_name': 'Item de pedido',
                'verbose_name_plural': 'Itens de pedido',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='order_item',
            field=models.ManyToManyField(blank=True, through='orders.OrderItem', to='products.product'),
        ),
    ]
